apiVersion: v1
kind: Namespace
metadata:
  name: php-app

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: php-app
  name: php-php
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: php-app
  replicas: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: php-app
    spec:
      readinessGates:
      - conditionType: target-health.alb.ingress.k8s.aws/k8s-phpapp-phpapp-d5c7858ec5
      terminationGracePeriodSeconds: 70
      containers:
      - image: 730335550052.dkr.ecr.ap-south-1.amazonaws.com/rajack:latest
        imagePullPolicy: Always
        name: php-app
        ports:
        - containerPort: 80
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 40"]
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 5
      maxSurge: 2


---

apiVersion: v1
kind: Service
metadata:
  namespace: php-app
  name: php-app
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: php-app

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: php-app
  name: php-app
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: " "
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/subnets: "subnet-0ebae3791b3d093de,subnet-00d85c9451e174c8a"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - host: "*.amazonaws.com"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: php-app
              port:
                number: 80



